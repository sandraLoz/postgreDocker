name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - "main"

env:
  PROJECT_ID: openmarket-356106
  GAR_LOCATION: eu.gcr.io 
  SERVICE: postgresdocker 
  REGION: europe-southwest1 
  IMAGE_NAME: postgresdocker

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
         credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Docker Auth        
        run: |-
         gcloud auth configure-docker --quiet
         gcloud auth configure-docker europe-southwest1-docker.pkg.dev --quiet


      - name: Build Docker image
         run: docker build . -t $IMAGE_NAME

      - name: Test Docker image
        run: docker run $IMAGE_NAME -p 5432:5432        

      - name: Push Docker image
        run: docker push $IMAGE_NAME

      - name: Deploy Docker image
        run: gcloud run deploy ${{ env.PROJECT_ID }} --image $IMAGE_NAME --region us-central1 --platform managed




      # Authenticate Docker to Google Cloud Artifact Registry
      # - name: Docker Auth        
      #   id: docker-auth
      #   uses: 'docker/login-action@v1'
      #   with:
      #     username: 'oauth2accesstoken'
      #     password: '${{ steps.auth.outputs.access_token }}'
      #     registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
      #- name: Build and Push Container        
      #  run: |-
      #    docker build -t "eu.gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}" ./          
      #    docker push "eu.gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"

      
      # END - Docker auth and build

      #- name: Deploy to Cloud Run
        # id: deploy
        # uses: google-github-actions/deploy-cloudrun@v0
        # with:
        #   service: ${{ env.SERVICE }}
        #   region: ${{ env.REGION }}
        #   flags: "--allow-unauthenticated"
        #   image: eu.gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}